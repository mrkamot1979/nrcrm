0) [DONE] create a real login database instead of an array in checklogin.php
1)[DONE] create an inc file to house the session validation function as it will be accessed by welcome.php, welcome_process.php
2) Create a database that accepts and displays japanese characters
	2.1) To change the whole database.  Syntax found on the web "ALTER DATABASE databasename CHARACTER SET utf8 COLLATE utf8_unicode_ci;" and "ALTER TABLE tablename CONVERT TO CHARACTER SET utf8 COLLATE utf8_unicode_ci;"
	2.2) To change a single table in the database. Syntax found on the web "ALTER TABLE tbl_name CONVERT TO CHARACTER SET charset_name;" and real life example is "ALTER TABLE etape_prospection CONVERT TO CHARACTER SET utf8;"
	2.3) Use "SET NAMES UTF8".  From the web Try using SET NAMES utf8 after connecting to MySQL:
		$con=mysqli_connect("host", "user", "pw", "db");   
		if (!$con)
		{
			die('Failed to connect to mySQL: ' .mysqli_connect_errno());
		}
		mysqli_query($con, "SET NAMES 'UTF8'") or die("ERROR: ". mysqli_error($con));

		As the manual says:
		SET NAMES indicates what character set the client will use to send SQL statements to the server... It also specifies the character set that the server should use for sending results back to the client.
	
	

3) [DONE] create another table that would house the client visits with the following fields
	ClientID (passed on via $_GET)
	VisitID (incremental, not null, unique)
	Date (convert to japanese format?)
	Time (japan format?)
	Notes (long characters).
	InteractionBy (will be filled up by the hidden input type "enteredby")
3.1) [DONE] Create a php login to mysql function inside an include file.	
4) [DONE] Add another crdential in the tbluser table
		5.1) username : thet password : miller13
5) Workflows
	5.1) [DONE] Create a script to handle frmclientvisitentry.php to pass ClientID and create incremental VisitID in tblclientvisit table
	5.2) Create Search Client > Enter Visitation details workflow
		5.2.1) [DONE] Search type and Search Term
		5.2.3) [DONE] Create newinteraction_process.php
	5.3) Create Extract Client Visits functionality based on 
		5.3.1) client name and date
		5.3.2) Interactionby/enteredby
6) [DONE] Confirm function of addslahes/htmlspecialchars/stripslashes - no need.
7) Destroy session functionality.
8) create javascript validations for 
	8.1) loginsession.php page
	8.2) frmentryvisit.page
	8.3)
9) [DONE] See why partial passwords still work!  i.e. if the password is "miller", entering "mill" grants the user access!!!  It turns out I should use the equal "=" sign instead of "LIKE" in MySQL.
10) [DONE] create cleaninput() to centralize cleaning
11) Login page > page to show choices what to do next > etc..
12) [DONE] Rename loginsession.php -> login.php
13) [DONE] Implement CSS to enter new client > enter visit details workflow
14) Create a Header in the includes section for ease of maintenance.
	14.1) [DONE] landing.php
	14.2) [DONE] newcliententry.php
	14.3) [DONE] newcliententry_process.php
	14.4) [DONE] newinteraction_search.php
	14.5) [DONE] newinteraction_process.php
    14.6) [DONE] clientvisitentryprocess.php
15) "Back to previous page" protection mechanism - this is important to avoid double entry to the database (i.e. same data but different identifier)
	


*aspirational* convert to PDO


MySQL IDs
Admin (all privileges granted) - nroldan/thet
Normal user (add only) - nroldanaddonly/thet


